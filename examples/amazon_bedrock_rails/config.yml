# NeMo Guardrails configurations

# Using default instructions, to customize uncomment below instructions section:
# instructions:
#   - type: general
#     content: |
#       You are a helpful, respectful and honest MBA Graduate Teaching Assistant.

# Using default sample_conversation, to customize uncomment below sample_conversation section:
# sample_conversation: |
#   user "Hello there!"
#     express greeting
#   bot express greeting
#     "Hello! How can I assist you today?"
#   user "What can you do for me?"
#     ask about capabilities
#   bot respond about capabilities
#     "As an AI assistant, I can help you with a wide range of tasks. This includes question answering on various topics, generating text for various purposes and providing suggestions based on your preferences."
#   user "Tell me a bit about the history of Harvard Business School."
#     ask general question
#   bot response for general question
#     "Harvard Graduate School of Business Administration established (the world's first MBA program) with a faculty of 15, 33 regular students, and 47 special students."
#   user "thanks"
#     express appreciation
#   bot express appreciation and offer additional help
#     "You're welcome. If you have any more questions or if there's anything else I can help you with, please don't hesitate to ask."

models:
  - type: main
    engine: amazon_bedrock
    model: cohere.command-text-v14
    parameters:
      model_id: cohere.command-text-v14
      model_kwargs:
        max_tokens: 100
        temperature: 0.7
  
  - type: embeddings
    engine: amazon_bedrock
    model: amazon.titan-embed-text-v1

core:
  embedding_search_provider:
    name: default
    parameters:
      embedding_engine: bedrock
      embedding_model: amazon.titan-embed-text-v1

knowledge_base:
  embedding_search_provider:
    name: default
    parameters:
      embedding_engine: bedrock
      embedding_model: amazon.titan-embed-text-v1

# Prompts for Cohere's Command models. While there is room for some improvement, the current results are encouraging.
# Command model works better than Command Light (Nightly) and is our current recommendation for Cohere.
prompts:
  - task: generate_user_intent
    models:
      - amazon_bedrock/cohere.command-text-v14    
    content: |-
      """
      {{ general_instruction }}
      Your task is to generate a short summary called user intent for the last user message in a conversation.
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | verbose_v1 }}
      {{ history | colang | verbose_v1 }}

      # These are some examples how the user talks:
      {{ examples | verbose_v1 }}
      # Generate the user intent for the next message. If possible, copy one of the intents from the example list above:
      {{ history | colang | last_turns(1) | verbose_v1 }}

    output_parser: "verbose_v1"

  - task: generate_next_steps
    models:
      - amazon_bedrock/cohere.command-text-v14
    content: |-
      """
      {{ general_instruction }}
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | remove_text_messages | verbose_v1 }}

      # This how the bot thinks, use these examples to generate the bot intent:
      {{ examples | remove_text_messages | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | remove_text_messages | verbose_v1 }}
      {{ history | colang | remove_text_messages | verbose_v1 }}

    output_parser: "verbose_v1"

  - task: generate_bot_message
    models:
      - amazon_bedrock/cohere.command-text-v14
    content: |-
      """
      {{ general_instruction }}
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | verbose_v1 }}

      {% if relevant_chunks %}
      # This is some additional context:
      ```markdown
      {{ relevant_chunks }}
      ```
      {% endif %}

      # This how the bot talks:
      {{ examples | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | verbose_v1 }}
      {{ history | colang | verbose_v1 }}

    output_parser: "verbose_v1"